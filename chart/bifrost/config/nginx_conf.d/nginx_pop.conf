#worker_processes  auto;

#pid        logs/nginx.pop.pid;

#events {
#    worker_connections  1024;
#}



    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.pop.log  main;
    error_log  logs/error.pop.log info;

    #tcp_nopush     on;

    #keepalive_timeout  65;

    #gzip  on;

    upstream router {          
        server 0.0.0.1;

        balancer_by_lua_block {
            local balancer = require "ngx.balancer"

            host_map = { 
                ['www.mocky.io'] = '34.254.137.88',
                ['mockbin.org'] = '18.232.17.79',
            }
        
            
            host = host_map[ngx.var.http_host]
            ngx.log(ngx.INFO, "Connecting to upstream: ", ngx.var.http_host, "=", host)
            local ok, err = balancer.set_current_peer(host, 443)
            if not ok then
                ngx.log(ngx.ERR, "failed to set the current peer: ", err)
                return ngx.exit(500)
            end
        }

        keepalive 500;
    }

    server {
        listen *:4443 ssl;
        ssl_certificate ssl/localhost.crt;
        ssl_certificate_key ssl/localhost.key;

        location / {
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass             https://router;
        }
    }

    server {
        listen *:80; 

        location / {
            return 200;
        }
        
    }


    server_tokens       off;
